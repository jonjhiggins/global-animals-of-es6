(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/*jshint esversion: 6 */

module.exports = (url, resolve, reject) => {
    // [ES6: fetch]
    const animalsPromise = fetch(url);
    animalsPromise
        // [ES6: implicit return]
        .then(data => data.json())
        .then(animals => {
            resolve(animals);
        })
        // [ES6: catch]
        .catch((error) => {
            reject(error);
            console.error(error);
        }
    );
};

},{}],2:[function(require,module,exports){

/*jshint esversion: 6 */

// Requires
const utils = require('./utils');
const loadData = require('./loadData');
const view = require('./view');

// Config
const config = {
    dataUrl: 'data/animals.json'
};

// Init
// [ES6: const]
const init = function() {
    const animals = new Promise((resolve, reject) => {
        loadData(config.dataUrl, resolve, reject);
    });

    animals
        .then(view().renderFormFields)
        .then(view().attachEvents);
};




init();

},{"./loadData":1,"./utils":3,"./view":4}],3:[function(require,module,exports){
/*jshint esversion: 6 */

module.exports = {
    dashify: (string) => string.toLowerCase().replace(' ', '-'),
    undashify: (string) => {
        const strings = string.split('-');
        let newString = '';

        for (const [i, item] of strings.entries()) {
            newString += item.substr(0,1).toUpperCase() + item.substr(1, item.length);
            newString += (i < strings.length - 1) ? ' ' : ''; // add space
        }
        return newString;
    }
};

},{}],4:[function(require,module,exports){
/*jshint esversion: 6 */

module.exports = () => {

    const utils = require('./utils');
    const view = {};

    // Elements
    view.el = {
        nameSelect: document.getElementById('animals-name'),
        countrySelect: document.getElementById('animals-country'),
        selects: document.querySelectorAll('select'),
        contentDiv: document.getElementById('animals-content')
    };

    // Attach events
    view.attachEvents = (data) => {

        // [ES6: destructing objects]
        const {nameSelect, countrySelect, contentDiv, selects} = view.el;

        const selectChange = function() {
            const name = nameSelect.value;
            const country = countrySelect.value;
            const match = data.filter(animal => {

                const namePass = name ? (utils.dashify(animal.name) === name) : true;
                const countryPass = country ? (utils.dashify(animal.country) === country) : true;

                return namePass && countryPass;
            });

            // Check if combination exists in data
            if (match.length) {
                const existingImg = contentDiv.querySelectorAll('img')[0];

                if (existingImg) {
                    window.setTimeout(() => {
                        existingImg.className += ' img--outgoing';
                    }, 10);

                    window.setTimeout(() => {
                        contentDiv.removeChild(existingImg);
                    }, 810);
                    // window.setTimeout(() => {
                    //     existingImg.className = existingImg.className.replace(' img--outgoing', '');
                    // }, 100);
                }

                const img = document.createElement('img');
                img.className = 'animals-content__img img--incoming';
                img.src = view.getImgSrc(name, utils.dashify(match[0].name), country, utils.dashify(match[0].country));
                contentDiv.append(img);
                window.setTimeout(() => {
                    img.className = img.className.replace(' img--incoming', '');
                }, 10);


            } else {
                contentDiv.innerHTML = `
                    <p>Sorry, that combination of name and place doesn't exist.</p>
                `;
            }
        };

        for (const select of selects) {
            select.addEventListener('change', selectChange);
        }
    };

    view.getImgSrc = (name, matchName, country, matchCountry) => {
        return `img/${name ? name : matchName}_${country ? country : matchCountry}_600.jpg`;
    };

    // Render form fields
    view.renderFormFields = (animals) => {

        const {nameSelect, countrySelect, contentDiv, selects} = view.el;

        const names = animals.map(animal => animal.name);
        const countries = animals.map(animal => animal.country);
        // [ES6: Set]
        const namesUnique = Array.from(new Set(names));
        const countriesUnique = Array.from(new Set(countries));


        // [ES6: template strings, template string functions]
        const renderOption = (value) => {
            return `<option value="${utils.dashify(value)}">${value}</option>`;
        };

        const nameHtml = `${namesUnique.map(renderOption).join('')}`;
        const countryHtml = `${countriesUnique.map(renderOption).join('')}`;

        // Render HTML
        nameSelect.innerHTML += nameHtml;
        countrySelect.innerHTML += countryHtml;

        return animals;
    };


    return view;


};

},{"./utils":3}]},{},[2]);
